<div id="EDIT_CONTROL">
  <div id="EDIT_STATE_TEXT">Edit mode off</div>
  <i class="fa fa-toggle-off fa-2x" id="EDIT_SWITCH"></i><br />
  <i class="fa fa-floppy-o fa-2x disabled" id="SAVE_BUTTON"></i>
</div>

<%= editable_tag(:h1, "test-page-header") %>
<%= editable_tag(:div, "test-page-body") %>

<script>
  function disableEditors() {
    $.each(tinymce.EditorManager.editors, function(index, editor) {
      // Hack: need to save and restore the dirty state because hide() 
      // sets isNotDirty to true
      var wasDirty = editor.isDirty();
      editor.hide(); 
      editor.setDirty(wasDirty);
    });
  }

  function enableEditors() {
    $.each(tinymce.EditorManager.editors, function(index, editor) {
      editor.show(); 
    });
  }

  function toggleEditMode() {
    var switchElem = $(this)
    , textElem = $('#EDIT_STATE_TEXT');

    if (switchElem.hasClass('fa-toggle-off')) {
      switchElem.removeClass('fa-toggle-off');
      switchElem.addClass('fa-toggle-on');
      textElem.html("Edit mode on")

      enableEditors();
    } else {
      switchElem.removeClass('fa-toggle-on');
      switchElem.addClass('fa-toggle-off');
      textElem.html("Edit mode off")
      
      disableEditors();
    }
  }

  function saveEditors() {
    disableSave();

    $.each(tinymce.EditorManager.editors, function(index, editor) {
      // isDirty returns true if the editor contents have been modified
      if (editor.isDirty()) {
        editor.save();

        var element = $(editor.getElement())
          , key = element.data('content-key')
          , locale = element.data('locale')
        ;

        $.ajax('/editor_content', {
          method: "POST",
          data: {
            key: key
          , value: editor.getContent()
          , locale: locale
          },
          error: function() {
            editor.setDirty(true);
            enableSave();
            alert("Oops, something went wrong! Please try again later.");
          }
        });
      }
    });
  };

  function disableSave() {
    var button = $('#SAVE_BUTTON');
    button.addClass('disabled');
    button.off('click');
  }

  function enableSave() {
    var button = $('#SAVE_BUTTON');
    button.removeClass('disabled');
    button.click(saveEditors)
  }

  function isSaveEnabled() {
    return !$('#SAVE_BUTTON').hasClass('disabled');
  }

  function initInstanceCallback(editor) {
    // start disabled
    editor.hide();
    editor.on('dirty', function() {
      console.log('dirty fired');

      if (editor.isDirty()) {
        console.log('editor dirty');
        console.log(editor.id)
        enableSave();
      }
    });
  }


  $(function() {  
    tinymce.init({
      selector: 'h1[data-editable="true"]',
      inline: true,
      plugins: 'paste',
      toolbar: 'undo redo',
      menubar: false,
      valid_styles: {
        '*': ''
      },
      valid_elements: '',
      init_instance_callback: initInstanceCallback
    });

    tinymce.init({
      selector: 'div[data-editable="true"]',
      inline: true,
      plugins: 'paste link',
      toolbar: 'undo redo | bold italic | bullist | link',
      menubar: false,
      valid_styles: {
        '*': ''
      },
      valid_elements: 'a[href],strong/b,p,br,ul,li,em',
      init_instance_callback: initInstanceCallback
    });

    $('#EDIT_CONTROL').draggable({ cursor: 'move' });
    $('#EDIT_SWITCH').click(toggleEditMode);
    $(window).on('beforeunload', function() {
      if (isSaveEnabled()) {
        return 'You currently have unsaved changes that will be lost if you leave this page.';
      }
    });
  });
</script>

